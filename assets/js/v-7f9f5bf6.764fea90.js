"use strict";(self.webpackChunkindex_one=self.webpackChunkindex_one||[]).push([[329],{118:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-7f9f5bf6",path:"/bio/plink%E8%AF%AD%E6%B3%95%E4%B8%8E%E8%A7%A3%E6%9E%90.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"PLINK语法体验",slug:"plink语法体验",children:[]}],filePathRelative:"bio/plink语法与解析.md",git:{}}},5234:(e,n,a)=>{a.r(n),a.d(n,{default:()=>i});const s=(0,a(6252).uE)('<h3 id="plink语法体验" tabindex="-1"><a class="header-anchor" href="#plink语法体验" aria-hidden="true">#</a> PLINK语法体验</h3><h5 id="by张成龙-邮箱-yianquanwl-qq-com-该教程参考邓飞博客与自己总结" tabindex="-1"><a class="header-anchor" href="#by张成龙-邮箱-yianquanwl-qq-com-该教程参考邓飞博客与自己总结" aria-hidden="true">#</a> by张成龙 邮箱：yianquanwl@qq.com 该教程参考邓飞博客与自己总结</h5><p>plink软件是<code>GWAS</code>分析中常用的软件，它也是一个数据格式，plink里面有很多非常强大的功能，运算速度很快，是我日常分析中常用的软件之一。(这里软件使用的版本为plink 1.9)</p><p>这里，我将<code>plink</code>软件分为三部分：</p><ul><li>格式转换</li><li>常用质控</li><li>文件提取</li></ul><h4 id="_1-格式转换" tabindex="-1"><a class="header-anchor" href="#_1-格式转换" aria-hidden="true">#</a> 1.格式转换</h4><p>第一种常用的格式：<code>plink</code>格式</p><ul><li>正常格式<code>map</code>和<code>ped</code>：比如a.ped，a.map。</li><li>二进制文件<code>bim，bed，fam</code>：比如a.bed, a.bim, a.fam。</li><li>第二种常用的格式：<code>vcf</code>格式。</li><li>第三种常用的格式：<code>hapmap</code>格式。</li></ul><h5 id="_1-1-plink正常格式转二进制格式" tabindex="-1"><a class="header-anchor" href="#_1-1-plink正常格式转二进制格式" aria-hidden="true">#</a> 1.1 plink正常格式转二进制格式</h5><p>比如这里有plink格式的文件，前缀为a的plink文件：</p><div class="language-plink ext-plink line-numbers-mode"><pre class="language-plink"><code>$ ls\na.map  a.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将其转化为二进制文件：b.bed, b.bim, b.fam</p><div class="language-plink ext-plink line-numbers-mode"><pre class="language-plink"><code>plink --file a --out b\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>结果</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls b*\nb.bed  b.bim  b.fam  b.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意：如果染色体超过23，比如30对染色体，需要设定<code>--chr-set 30</code> 如果有非数字染色体，比如性染色体，需要设定<code>--allow-extra-chr</code> 常用的动物都有对应的参数，直接设定相关动物就行，比如牛的<code>--cow</code>，下面是其它动植物的。 如果没有对应的物种，直接设置染色体的条数以及允许非数字染色体即可。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--cow\n--dog\n--horse\n--mouse·\t\t\t\t\t\t\t\t\n--rice\n--sheep\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="_1-2-plink二进制格式转为正常格式-map和ped" tabindex="-1"><a class="header-anchor" href="#_1-2-plink二进制格式转为正常格式-map和ped" aria-hidden="true">#</a> 1.2 plink二进制格式转为正常格式（map和ped）</h5><p>这里有plink格式的文件，前缀为b的plink二进制文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls b*\nb.bed  b.bim  b.fam  b.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将其转化文件：<code>c.map, c.ped</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --bfile b --recode --out c\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>注意：</p><ul><li>–bfile，因为输入文件b*为二进制，所以用–bfile，如果是一般格式，用–file即可</li><li>–recode，要输出正常格式，所以用–recode指定，如果不加这个参数，默认是输出二进制文件</li><li>–out，输出文件的前缀</li></ul><p>结果：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls *c*\nc.hh  c.log  c.map  c.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="_1-3-正常plink文件转为vcf文件" tabindex="-1"><a class="header-anchor" href="#_1-3-正常plink文件转为vcf文件" aria-hidden="true">#</a> 1.3 正常plink文件转为vcf文件</h5><p>这里有plink格式的文件，前缀为c的plink二进制文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls *c*\nc.hh  c.log  c.map  c.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将其转化文件：d.vcf</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --file c --recode vcf --out d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>注意：</p><ul><li>–file，用–file指定正常plink格式的文件</li><li>–recode vcf，要输出vcf文件格式</li><li>–out，输出文件的前缀</li></ul><h5 id="_1-4-二进制plink文件转为vcf文件" tabindex="-1"><a class="header-anchor" href="#_1-4-二进制plink文件转为vcf文件" aria-hidden="true">#</a> 1.4 二进制plink文件转为vcf文件</h5><p>和正常plink文件类似，除了--file 变为--bfile即可。</p><p>现有文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls b*\nb.bed  b.bim  b.fam  b.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将二进制文件转化为vcf文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --bfile b --recode vcf --out e\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="_1-5-vcf文件转化为plink文件" tabindex="-1"><a class="header-anchor" href="#_1-5-vcf文件转化为plink文件" aria-hidden="true">#</a> 1.5 vcf文件转化为plink文件</h5><p>转化为正常plink文件：</p><p>现有文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls e.vcf\ne.vcf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --vcf e.vcf --recode --out f\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>注意：</p><ul><li>–vcf 需要文件名完整，不能只写前缀，所以这里要写--vcf e.vcf</li><li>–recode 保存plink文件</li></ul><p>保存为二进制文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --vcf e.vcf  --out g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls g*\ng.bed  g.bim  g.fam  g.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-常用质控" tabindex="-1"><a class="header-anchor" href="#_2-常用质控" aria-hidden="true">#</a> 2.常用质控</h4><h5 id="_2-1-snp缺失质控" tabindex="-1"><a class="header-anchor" href="#_2-1-snp缺失质控" aria-hidden="true">#</a> 2.1 SNP缺失质控</h5><p>无论是测序还是芯片，得到的基因型数据要进行质控，而对缺失数据进行筛选，可以去掉低质量的数据。如果一个个体，共有50万SNP数据，发现20%的SNP数据（10万）都缺失，那这个个体我们认为质量不合格，如果加入分析中可能会对结果产生负面的影响，所以我们可以把它删除。同样的道理，如果某个SNP，在500个样本中，缺失率为20%（即该SNP在100个个体中都没有分型结果），我们也可以认为该SNP质量较差，将去删除。当然，这里的20%是过滤标准，可以改变质控标准。</p><p>现有文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls a*\na.map  a.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>某个SNP在样本中缺失大于10%，删除该SNP：<code>--geno</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --file a --geno 0.1 --recode --out re\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>某个在某个样本中，SNP缺失大于10%，删除该样本：<code>--mind</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --file a --mind 0.1 --recode --out re\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="_2-2-最小等位基因频率过滤" tabindex="-1"><a class="header-anchor" href="#_2-2-最小等位基因频率过滤" aria-hidden="true">#</a> 2.2 最小等位基因频率过滤</h5><p>最小等位基因频率怎么计算？比如一个位点有AA或者AT或者TT，那么就可以计算A的基因频率和T的基因频率，qA + qT = 1，这里谁比较小，谁就是最小等位基因频率，比如qA = 0.3, qT = 0.7， 那么这个位点的MAF为0.3. 之所以用这个过滤标准，是因为MAF如果非常小，比如低于0.02，那么意味着大部分位点都是相同的基因型，这些位点贡献的信息非常少，增加假阳性。更有甚者MAF为0，那就是所有位点只有一种基因型，这些位点没有贡献信息，放在计算中增加计算量，没有意义，所以要根据MAF进行过滤。</p><p>现有文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls a*\na.map  a.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>某个SNP在的MAF小于0.01，那么该SNP删掉：<code>--maf 0.01</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --file a --maf 0.01 --recode --out re\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="_2-3-哈温平衡过滤" tabindex="-1"><a class="header-anchor" href="#_2-3-哈温平衡过滤" aria-hidden="true">#</a> 2.3 哈温平衡过滤</h5><p>「卡方适合性检验！」 ，一个群体是否符合这种状况，即达到了遗传平衡，也就是一对等位基因的3种基因型的比例分布符合公式：p2+2pq+q2=1,p+q=1,(p+q)2=1.基因型MM的频率为p2,NN的频率为q2,MN的频率为2pq。MN:MN：NN＝P2：2pq：q2。MN这对基因在群体中达此状态，就是达到了遗传平衡。如果没有达到这个状态，就是一个遗传不平衡的群体。但随着群体中的随机交配，将会保持这个基因频率和基因型分布比例，而较易达到遗传平衡状态。应用Hardy-Weinberg遗传平衡吻合度检验方法，把计算得到的基因频率代入，计算基因型平衡频率，再乘以总人数，求得预期值（e）。把观察数（O）与预期值（e）作比较，进行χ2检验。病例组和对照组的基因型分布的观察值和预期值差异无显著性（P&gt;0.05），符合遗传平衡定律.</p><h6 id="现有文件" tabindex="-1"><a class="header-anchor" href="#现有文件" aria-hidden="true">#</a> 现有文件：</h6><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ls a*\na.map  a.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>某个SNP在哈温平衡检验中p值小于1e-5，那么该SNP删掉：<code>--maf 0.01</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --file a --hwe 1e-5 --recode --out re    \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="_1-文件提取" tabindex="-1"><a class="header-anchor" href="#_1-文件提取" aria-hidden="true">#</a> 1. 文件提取</h5><p>文件提取，可以提取plink个数中的样本信息，也可以提取特定的SNP位点信息。 3.1 样本提取--keep和-- remove</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    –keep， 提取样本ID\n    –remove，删除样本ID\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>提取样本文件的格式：</p><ul><li>第一列：FID，家系ID</li><li>第二列：IID，个体ID</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1328 NA06989\n1377 NA11891\n1349 NA11843\n1330 NA12341\n1344 NA10850\n1328 NA06984\n1463 NA12877\n1418 NA12275\n13291 NA06986\n1418 NA12272\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h5 id="样本提取" tabindex="-1"><a class="header-anchor" href="#样本提取" aria-hidden="true">#</a> 样本提取</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --file a --keep id_sample.txt --recode --out re\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ wc -l re*\n       2 re.hh\n      32 re.log\n 1431211 re.map\n      10 re.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="样本删除" tabindex="-1"><a class="header-anchor" href="#样本删除" aria-hidden="true">#</a> 样本删除</h5><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --file a --remove id_sample.txt --recode --out re\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_3-2-snp提取-extract和-exclude" tabindex="-1"><a class="header-anchor" href="#_3-2-snp提取-extract和-exclude" aria-hidden="true">#</a> 3.2 SNP提取<code>--extract</code>和-- <code>exclude</code></h4><ul><li>–extract， 提取SNP ID</li><li>–exclude，删除SNP ID</li></ul><p>提取样本文件的格式：</p><p>一列：SNP名称ID</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>rs2185539\nrs11240767\nrs3131972\nrs3131969\nrs1048488\nrs12562034\nrs12124819\nrs4040617\nrs2905036\nrs4245756\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="snp提取" tabindex="-1"><a class="header-anchor" href="#snp提取" aria-hidden="true">#</a> SNP提取</h4><p><code>plink --file a --extract id_snp.txt --recode --out re</code></p><p>完成。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ wc -l re*\n  179 re.hh\n   30 re.log\n   10 re.map\n  164 re.ped\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>可以看到，map共10行，共提取10个SNP</p><h4 id="snp删除" tabindex="-1"><a class="header-anchor" href="#snp删除" aria-hidden="true">#</a> SNP删除</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> plink --file a --exclude id_snp.txt --recode --out re\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="snp合并" tabindex="-1"><a class="header-anchor" href="#snp合并" aria-hidden="true">#</a> SNP合并</h4><h5 id="一、合并文件" tabindex="-1"><a class="header-anchor" href="#一、合并文件" aria-hidden="true">#</a> 一、合并文件</h5><p>plink合并文件需要用到<code>merge</code>参数</p><p>如果是ped和map格式文件，则用以下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --file data1 --merge data2.ped data2.map --recode --out merge\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p></p><p>如果是二进制文件和ped,map格式文件，则用以下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --bfile data1 --merge data2.ped data2.map --make-bed --out merge\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p></p><p>如果都是二进制文件，则用以下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --bfile data1 --bmerge data2.bed data2.bim data2.fam --make-bed --out merge\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p></p><p>如果是合并多个文件，则用以下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/plink-1.07-x86_64/plink --noweb --bfile file --merge-list batch.txt --make-bed --out batch\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>batch.txt的文件格式如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>file1.bed file1.bim file1.fam\n\nfile2.bed file2.bim file2.fam\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="更新snp位置" tabindex="-1"><a class="header-anchor" href="#更新snp位置" aria-hidden="true">#</a> 更新SNP位置</h4><p>假设更新 rs10002到位置580000，如下所示：</p><p>原始文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>     ...\n     rs10001   500000\n     rs10002   580000\n     rs10003   540000\n     rs10004   560000\n     ...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>新的文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>     ...\n     rs10001   500000\n     rs10003   540000\n     rs10004   560000\n     rs10002   580000\n     ...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>更新SNP位置可以采用plink的<code>--update-name </code>和<code>--update-chr</code>参数</p><p>具体命令如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>./plink --bfile mydata --update-map rsID.lst --update-name --make-bed --out mydata2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p></p><p>或者</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>./plink --bfile mydata --update-map chr-codes.txt --update-chr --make-bed --out mydata2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p></p><p>rsID.lst的输入格式如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    SNP_A-1919191   rs123456\n    SNP_A-64646464  rs222222\n    ...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>chr-codes.txt的输入格式如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>   rs123456     1\n   rs987654     18\n   rs678678     X\n   ..\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="后续出现的小问题" tabindex="-1"><a class="header-anchor" href="#后续出现的小问题" aria-hidden="true">#</a> 后续出现的小问题</h4><p>plink合并不了，有两个方面的问题</p><ul><li>map文件问题</li><li>ped文件问题</li></ul><p>1.map文件要统一，包括pos名称，统一修改，建议采用·plink提取的方法，方法见前面。</p><p>2.ped第六列要一致，至于怎么一致有两种方法。第一正则表达式，具体方法参考正则表达式章节。 第二种方法，先将plink文件转换为vcf格式，方法见前面。然后将vcf转为plink，此时转换语句为</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>plink --vcf input.vcf --recode --out output --const-fid family_id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>通过<code>--const-fid</code>将family id设置成一个常量，默认值是0.这样我们得到的文件就可以合并了。</p>',133),l={},i=(0,a(3744).Z)(l,[["render",function(e,n){return s}]])},3744:(e,n)=>{n.Z=(e,n)=>{for(const[a,s]of n)e[a]=s;return e}}}]);